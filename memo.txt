from sklearn.model_selection import train_test_split


from sklearn.linear_model import Ridge
from sklearn.linear_model import Lasso
from sklearn.linear_model import LinearRegression
from sklearn.linear_model import LogisticRegression


from sklearn.preprocessing import PolynomialFeatures
from sklearn.preprocessing import MinMaxScaler, PolynomialFeatures


poly_features = PolynomialFeatures(degree=2)	
X_poly = poly_features.fit_transform(X)



			StandardScaler는 각 특성의 평균을 0 분산을 1로 변경하여 모든 특성이 같은 크기를 가지게 한다.
			MinmaxScaler는 모든 특성이 정확하게 0과 1사이에 위치하도록 데이터를 변경한다.
			
			데이터 전처리를 하기 전의 성능
			# 훈련 세트 정확도 : 1.000
			# 테스트 세트 정확도 : 0.629
			
			MinMaxScaler를 사용하여 데이터 전처리 후 성능
			# 스케일 조정된 훈련 세트 정확도 : 0.99
			# 스케일 조정된 테스트 세트 정확도 : 0.97
			
			StandardScaler를 사용하여 데이터 전처리 후 성능
			# 스케일 조정된 훈련 세트 정확도 : 1.00
			# 스케일 조정된 테스트 세트 정확도 : 0.96


(데이터셋 구성)
CRIM: 자치시(town) 별 1인당 범죄율
ZN: 25,000 평방피트를 초과하는 거주지역의 비율
INDUS:비소매상업지역이 점유하고 있는 토지의 비율
CHAS: 찰스강에 대한 더미변수(강의 경계에 위치한 경우는 1, 아니면 0)
NOX: 10ppm 당 농축 일산화질소
RM: 주택 1가구당 평균 방의 개수
AGE: 1940년 이전에 건축된 소유주택의 비율
DIS: 5개의 보스턴 직업센터까지의 접근성 지수
RAD: 방사형 도로까지의 접근성 지수
TAX: 10,000 달러 당 재산세율
PTRATIO: 자치시(town)별 학생/교사 비율
B: 1000(Bk-0.63)^2, 여기서 Bk는 자치시별 흑인의 비율을 말함.
LSTAT: 모집단의 하위계층의 비율(%)
MEDV: 본인 소유의 주택가격(중앙값) (단위: $1,000)

Neural network 을 통한 regression 에서 MSE 가 약 20 이 나오면 정확하게 regression 이 된 것 입니다.
[출처] Feature scaling 방법 및 training 과정 시각화(visualization)|작성자 코딩박사오박사
범죄율, 평균 방의 개수, 학생/교사 비율, 직업센터까지의 접근성 지수



--------------------------------------------
신경망 학습의 목적은 손실 함수의 값을 가능한 한 낮추는 매개변수를 찾는 것이었죠. 이는 곧 매개변수의 최적값을 찾는 문제이며, 이러한 문제를 푸는 것을 최적화(optimization)라 합니다

--------------------------------------------

로지스틱회귀에서는 순입력 함수의 리턴값에 대해 가중치 업데이트 여부를 결정하는 활성 함수로 sigmod 함수를 이용합니다.
즉 로지스틱 회귀는 순입력 함수의 리턴값을 sigmoid 함수에 대입하여 그 결과값을 가지고 가중치 업데이트를 할 지 말지를 결정하는 것이 핵심입니다.
sigmoid 함수의 리턴값은 곧 입력한 트레이팅 데이타가 특정 클래스에 속할 확률이 되므로 
로지스틱 회귀는 입력되는 트레이닝 데이타의 특정 클래스에 포함될 예측 확률에 따라 머신러닝을 수행하는 알고리즘일을 알 수 있습니다.

---------------------------------------------------------------------------

tensorflow CNTK Theano


3가지 종류의 붓꽃. 꽃잎과 꽃받침의 크기에 따라 종이 구분된다
https://blog.naver.com/drvoss/221172647011



iris = pd.read_csv('data/iris.data', header=None)
c = iris[4]
c = c.replace(np.unique(c), ['r','g','b'])
_=pd.plotting.scatter_matrix(DataFrame(iris), figsize=(10,10), c=c)iris = pd.read_csv('data/iris.data', header=None)
c = iris[4]
c = c.replace(np.unique(c), ['r','g','b'])
_=pd.plotting.scatter_matrix(DataFrame(iris), figsize=(10,10), c=c)


regression 
edwith 참고
D:\python_project\ed\codes\ch_5\part-2 

-----------------------------------------------------------

시그모이드함수
import math

def sigmoid(x, deff=False):
  if deff:
    return sigmoid(x)*(1-sigmoid(x))
  else:
    return 1 / (1 + math.exp(-x))


def sigmoid(x):
    return 1 / (1 + np.exp(-x))

def softmax(x):
    e_x = np.exp(x - np.max(x))
    return e_x / e_x.sum()
---------------------------------------------------------------------------

#softmax

import numpy as np
import matplotlib.pyplot as plt
 
def softmax(x):
    e_x = np.exp(x - np.max(x))
    return e_x / e_x.sum()
 
x = np.array([1.0,1.0,2.0])
 
y = softmax(x)
 
print(np.sum(y))
 
ratio = y
labels = y
 
plt.pie(ratio, labels=labels, shadow=True, startangle=90)
plt.show()

[출처] [딥러닝] 활성화 함수 소프트맥스(Softmax)|작성자 똑똑이

---------------------------------------------------------------------------

객체저장
import pickle
with open('./pickle','wb') as f:
    name = '유재석'
    birth= '1972/08/14/s'
    height = '177/cm'
    weight = '62/kg'
    country = 'KOREA'
    answer = {1:'1',2:'4', 3:'4', 4:'2', 5:'5'}

    pickle.dump(name, f)
    pickle.dump(birth, f)
    pickle.dump(height, f)
    pickle.dump(weight, f)
    pickle.dump(country, f)
    pickle.dump(answer, f)
    

with open('./pickle','rb') as f:
    tmpLst = list()
    result = dict()
    tag = ['name','birth','height','weight','country','answer']
    try:
        while(1):
            tmpLst.append(pickle.load(f))
    except EOFError as e:
        print(e)
    finally:
        result=dict(zip(tag,tmpLst))
    print(result)

------------------------------------------

from tensorflow.python.client import device_lib
device_lib.list_local_devices()
[출처] [tensorflow] CPU, GPU 장비 확인|작성자 똑똑이

[결과] (예시)
[
  name: "/device:CPU:0" 
  device_type: "CPU" 
  memory_limit: 268435456 locality { } 
  incarnation: 4251054241387008400
]

프로그래밍 할 때 사용하고자 하는 CPU 또는 GPU 이름을 지정할 수 있다.
tf.device('/device:CPU:0')
끝.


---------------------


from pickle import dump
from pickle import load

filename = 'finalized_model.sav'

dump(model, open(filename, 'wb'))

loaded_model = load(open(filename, 'rb'))

-------------------------------------------------------------------------------
iris
keras : https://blog.naver.com/wideeyed/221329615996
R : https://blog.naver.com/seodaeho91/221312210281
tenserflow : https://tensorflowkorea.gitbooks.io/tensorflow-kr/content/g3doc/tutorials/tflearn/


keras image : https://github.com/parkskwan/cnn_img

